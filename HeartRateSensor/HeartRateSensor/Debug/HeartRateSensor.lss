
HeartRateSensor.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000010  00800100  00000990  00000a24  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000990  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  00800110  00800110  00000a34  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000a34  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000a64  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000040  00000000  00000000  00000aa4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000009d5  00000000  00000000  00000ae4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000082c  00000000  00000000  000014b9  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000003d0  00000000  00000000  00001ce5  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000080  00000000  00000000  000020b8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000455  00000000  00000000  00002138  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000001cc  00000000  00000000  0000258d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000060  00000000  00000000  00002759  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 b1 00 	jmp	0x162	; 0x162 <__ctors_end>
   4:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
   8:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
   c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  10:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  14:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  18:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  1c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  20:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  24:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  28:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  2c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  30:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  34:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  38:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  3c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  40:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  44:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  48:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  4c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  50:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  54:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  58:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  5c:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  60:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>
  64:	0c 94 ce 00 	jmp	0x19c	; 0x19c <__bad_interrupt>

00000068 <__trampolines_end>:
  68:	00 40       	sbci	r16, 0x00	; 0
  6a:	7a 10       	cpse	r7, r10
  6c:	f3 5a       	subi	r31, 0xA3	; 163
  6e:	00 a0       	ldd	r0, Z+32	; 0x20
  70:	72 4e       	sbci	r23, 0xE2	; 226
  72:	18 09       	sbc	r17, r8
  74:	00 10       	cpse	r0, r0
  76:	a5 d4       	rcall	.+2378   	; 0x9c2 <__data_load_end+0x22>
  78:	e8 00       	.word	0x00e8	; ????
  7a:	00 e8       	ldi	r16, 0x80	; 128
  7c:	76 48       	sbci	r23, 0x86	; 134
  7e:	17 00       	.word	0x0017	; ????
  80:	00 e4       	ldi	r16, 0x40	; 64
  82:	0b 54       	subi	r16, 0x4B	; 75
  84:	02 00       	.word	0x0002	; ????
  86:	00 ca       	rjmp	.-3072   	; 0xfffff488 <__eeprom_end+0xff7ef488>
  88:	9a 3b       	cpi	r25, 0xBA	; 186
  8a:	00 00       	nop
  8c:	00 e1       	ldi	r16, 0x10	; 16
  8e:	f5 05       	cpc	r31, r5
  90:	00 00       	nop
  92:	80 96       	adiw	r24, 0x20	; 32
  94:	98 00       	.word	0x0098	; ????
  96:	00 00       	nop
  98:	40 42       	sbci	r20, 0x20	; 32
  9a:	0f 00       	.word	0x000f	; ????
  9c:	00 00       	nop
  9e:	a0 86       	std	Z+8, r10	; 0x08
  a0:	01 00       	.word	0x0001	; ????
  a2:	00 00       	nop
  a4:	10 27       	eor	r17, r16
  a6:	00 00       	nop
  a8:	00 00       	nop
  aa:	e8 03       	fmulsu	r22, r16
  ac:	00 00       	nop
  ae:	00 00       	nop
  b0:	64 00       	.word	0x0064	; ????
  b2:	00 00       	nop
  b4:	00 00       	nop
  b6:	0a 00       	.word	0x000a	; ????
  b8:	00 00       	nop
  ba:	00 00       	nop
  bc:	01 00       	.word	0x0001	; ????
  be:	00 00       	nop
  c0:	00 00       	nop
  c2:	2c 76       	andi	r18, 0x6C	; 108
  c4:	d8 88       	ldd	r13, Y+16	; 0x10
  c6:	dc 67       	ori	r29, 0x7C	; 124
  c8:	4f 08       	sbc	r4, r15
  ca:	23 df       	rcall	.-442    	; 0xffffff12 <__eeprom_end+0xff7eff12>
  cc:	c1 df       	rcall	.-126    	; 0x50 <__SREG__+0x11>
  ce:	ae 59       	subi	r26, 0x9E	; 158
  d0:	e1 b1       	in	r30, 0x01	; 1
  d2:	b7 96       	adiw	r30, 0x27	; 39
  d4:	e5 e3       	ldi	r30, 0x35	; 53
  d6:	e4 53       	subi	r30, 0x34	; 52
  d8:	c6 3a       	cpi	r28, 0xA6	; 166
  da:	e6 51       	subi	r30, 0x16	; 22
  dc:	99 76       	andi	r25, 0x69	; 105
  de:	96 e8       	ldi	r25, 0x86	; 134
  e0:	e6 c2       	rjmp	.+1484   	; 0x6ae <dtoa_prf+0x26c>
  e2:	84 26       	eor	r8, r20
  e4:	eb 89       	ldd	r30, Y+19	; 0x13
  e6:	8c 9b       	sbis	0x11, 4	; 17
  e8:	62 ed       	ldi	r22, 0xD2	; 210
  ea:	40 7c       	andi	r20, 0xC0	; 192
  ec:	6f fc       	.word	0xfc6f	; ????
  ee:	ef bc       	out	0x2f, r14	; 47
  f0:	9c 9f       	mul	r25, r28
  f2:	40 f2       	brcs	.-112    	; 0x84 <__trampolines_end+0x1c>
  f4:	ba a5       	ldd	r27, Y+42	; 0x2a
  f6:	6f a5       	ldd	r22, Y+47	; 0x2f
  f8:	f4 90       	lpm	r15, Z
  fa:	05 5a       	subi	r16, 0xA5	; 165
  fc:	2a f7       	brpl	.-54     	; 0xc8 <__trampolines_end+0x60>
  fe:	5c 93       	st	X, r21
 100:	6b 6c       	ori	r22, 0xCB	; 203
 102:	f9 67       	ori	r31, 0x79	; 121
 104:	6d c1       	rjmp	.+730    	; 0x3e0 <putchar+0xc>
 106:	1b fc       	.word	0xfc1b	; ????
 108:	e0 e4       	ldi	r30, 0x40	; 64
 10a:	0d 47       	sbci	r16, 0x7D	; 125
 10c:	fe f5       	brtc	.+126    	; 0x18c <.do_clear_bss_loop>
 10e:	20 e6       	ldi	r18, 0x60	; 96
 110:	b5 00       	.word	0x00b5	; ????
 112:	d0 ed       	ldi	r29, 0xD0	; 208
 114:	90 2e       	mov	r9, r16
 116:	03 00       	.word	0x0003	; ????
 118:	94 35       	cpi	r25, 0x54	; 84
 11a:	77 05       	cpc	r23, r7
 11c:	00 80       	ld	r0, Z
 11e:	84 1e       	adc	r8, r20
 120:	08 00       	.word	0x0008	; ????
 122:	00 20       	and	r0, r0
 124:	4e 0a       	sbc	r4, r30
 126:	00 00       	nop
 128:	00 c8       	rjmp	.-4096   	; 0xfffff12a <__eeprom_end+0xff7ef12a>
 12a:	0c 33       	cpi	r16, 0x3C	; 60
 12c:	33 33       	cpi	r19, 0x33	; 51
 12e:	33 0f       	add	r19, r19
 130:	98 6e       	ori	r25, 0xE8	; 232
 132:	12 83       	std	Z+2, r17	; 0x02
 134:	11 41       	sbci	r17, 0x11	; 17
 136:	ef 8d       	ldd	r30, Y+31	; 0x1f
 138:	21 14       	cp	r2, r1
 13a:	89 3b       	cpi	r24, 0xB9	; 185
 13c:	e6 55       	subi	r30, 0x56	; 86
 13e:	16 cf       	rjmp	.-468    	; 0xffffff6c <__eeprom_end+0xff7eff6c>
 140:	fe e6       	ldi	r31, 0x6E	; 110
 142:	db 18       	sub	r13, r11
 144:	d1 84       	ldd	r13, Z+9	; 0x09
 146:	4b 38       	cpi	r20, 0x8B	; 139
 148:	1b f7       	brvc	.-58     	; 0x110 <__trampolines_end+0xa8>
 14a:	7c 1d       	adc	r23, r12
 14c:	90 1d       	adc	r25, r0
 14e:	a4 bb       	out	0x14, r26	; 20
 150:	e4 24       	eor	r14, r4
 152:	20 32       	cpi	r18, 0x20	; 32
 154:	84 72       	andi	r24, 0x24	; 36
 156:	5e 22       	and	r5, r30
 158:	81 00       	.word	0x0081	; ????
 15a:	c9 f1       	breq	.+114    	; 0x1ce <init_USART+0x1a>
 15c:	24 ec       	ldi	r18, 0xC4	; 196
 15e:	a1 e5       	ldi	r26, 0x51	; 81
 160:	3d 27       	eor	r19, r29

00000162 <__ctors_end>:
 162:	11 24       	eor	r1, r1
 164:	1f be       	out	0x3f, r1	; 63
 166:	cf ef       	ldi	r28, 0xFF	; 255
 168:	d8 e0       	ldi	r29, 0x08	; 8
 16a:	de bf       	out	0x3e, r29	; 62
 16c:	cd bf       	out	0x3d, r28	; 61

0000016e <__do_copy_data>:
 16e:	11 e0       	ldi	r17, 0x01	; 1
 170:	a0 e0       	ldi	r26, 0x00	; 0
 172:	b1 e0       	ldi	r27, 0x01	; 1
 174:	e0 e9       	ldi	r30, 0x90	; 144
 176:	f9 e0       	ldi	r31, 0x09	; 9
 178:	02 c0       	rjmp	.+4      	; 0x17e <__do_copy_data+0x10>
 17a:	05 90       	lpm	r0, Z+
 17c:	0d 92       	st	X+, r0
 17e:	a0 31       	cpi	r26, 0x10	; 16
 180:	b1 07       	cpc	r27, r17
 182:	d9 f7       	brne	.-10     	; 0x17a <__do_copy_data+0xc>

00000184 <__do_clear_bss>:
 184:	21 e0       	ldi	r18, 0x01	; 1
 186:	a0 e1       	ldi	r26, 0x10	; 16
 188:	b1 e0       	ldi	r27, 0x01	; 1
 18a:	01 c0       	rjmp	.+2      	; 0x18e <.do_clear_bss_start>

0000018c <.do_clear_bss_loop>:
 18c:	1d 92       	st	X+, r1

0000018e <.do_clear_bss_start>:
 18e:	a6 31       	cpi	r26, 0x16	; 22
 190:	b2 07       	cpc	r27, r18
 192:	e1 f7       	brne	.-8      	; 0x18c <.do_clear_bss_loop>
 194:	0e 94 13 01 	call	0x226	; 0x226 <main>
 198:	0c 94 c6 04 	jmp	0x98c	; 0x98c <_exit>

0000019c <__bad_interrupt>:
 19c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001a0 <put_char>:
	ADCSRB = 0; //free running mode
}

static int put_char(char c, FILE *stream) //required for printf
{
	while(!(UCSR0A &(1<<UDRE0))); // wait for UDR to be clear
 1a0:	e0 ec       	ldi	r30, 0xC0	; 192
 1a2:	f0 e0       	ldi	r31, 0x00	; 0
 1a4:	90 81       	ld	r25, Z
 1a6:	95 ff       	sbrs	r25, 5
 1a8:	fd cf       	rjmp	.-6      	; 0x1a4 <put_char+0x4>
	UDR0 = c;    //send the character
 1aa:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	return 0;
}
 1ae:	80 e0       	ldi	r24, 0x00	; 0
 1b0:	90 e0       	ldi	r25, 0x00	; 0
 1b2:	08 95       	ret

000001b4 <init_USART>:
void init_USART(){
	unsigned int BAUDrate;

	//set BAUD rate: UBRR = [F_CPU/(16*BAUD)]-1
	BAUDrate = ((F_CPU/16)/BAUD) - 1;
	UBRR0H = (unsigned char) (BAUDrate >> 8); //shift top 8 bits into UBRR0H
 1b4:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = (unsigned char) BAUDrate; //shift rest of 8 bits into UBRR0L
 1b8:	83 e3       	ldi	r24, 0x33	; 51
 1ba:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	UCSR0B |= (1 << RXEN0) | (1 << TXEN0); //enable receiver and trasmitter
 1be:	e1 ec       	ldi	r30, 0xC1	; 193
 1c0:	f0 e0       	ldi	r31, 0x00	; 0
 1c2:	80 81       	ld	r24, Z
 1c4:	88 61       	ori	r24, 0x18	; 24
 1c6:	80 83       	st	Z, r24
	UCSR0C |= (1 << UCSZ01) | (1 << UCSZ00); //set data frame: 8 bit, 1 stop
 1c8:	e2 ec       	ldi	r30, 0xC2	; 194
 1ca:	f0 e0       	ldi	r31, 0x00	; 0
 1cc:	80 81       	ld	r24, Z
 1ce:	86 60       	ori	r24, 0x06	; 6
 1d0:	80 83       	st	Z, r24
 1d2:	08 95       	ret

000001d4 <init_ADC>:
}

void init_ADC(){
	ADMUX = 0; //use ADC0
 1d4:	ec e7       	ldi	r30, 0x7C	; 124
 1d6:	f0 e0       	ldi	r31, 0x00	; 0
 1d8:	10 82       	st	Z, r1
	ADMUX |= (1 << REFS0); //use AVcc as the reference (5V)
 1da:	80 81       	ld	r24, Z
 1dc:	80 64       	ori	r24, 0x40	; 64
 1de:	80 83       	st	Z, r24
	ADMUX |= (1 << ADLAR); //set to right adjust for 8-bit ADC
 1e0:	80 81       	ld	r24, Z
 1e2:	80 62       	ori	r24, 0x20	; 32
 1e4:	80 83       	st	Z, r24

	//ADCSRA |= (1 << ADIE); //ADC interrupt enable
	ADCSRA |= (1 << ADEN); //enable ADC
 1e6:	ea e7       	ldi	r30, 0x7A	; 122
 1e8:	f0 e0       	ldi	r31, 0x00	; 0
 1ea:	80 81       	ld	r24, Z
 1ec:	80 68       	ori	r24, 0x80	; 128
 1ee:	80 83       	st	Z, r24
	
	//set pre-scale to 2 for input frequency
	ADCSRA &= ~(1 << ADPS2) | ~(1 << ADPS1) | ~(1 << ADPS0);
 1f0:	80 81       	ld	r24, Z
 1f2:	80 83       	st	Z, r24
	
	ADCSRB = 0; //free running mode
 1f4:	10 92 7b 00 	sts	0x007B, r1	; 0x80007b <__TEXT_REGION_LENGTH__+0x7e007b>
 1f8:	08 95       	ret

000001fa <USART_tx_string>:
	while(!(UCSR0A &(1<<UDRE0))); // wait for UDR to be clear
	UDR0 = c;    //send the character
	return 0;
}

void USART_tx_string(char* data){
 1fa:	cf 93       	push	r28
 1fc:	df 93       	push	r29
	while((*data!='\0')){ //print until null
 1fe:	fc 01       	movw	r30, r24
 200:	20 81       	ld	r18, Z
 202:	22 23       	and	r18, r18
 204:	69 f0       	breq	.+26     	; 0x220 <USART_tx_string+0x26>
 206:	dc 01       	movw	r26, r24
 208:	11 96       	adiw	r26, 0x01	; 1
		while(!(UCSR0A &(1<<UDRE0))); //check if transmit buffer is ready for new data
 20a:	e0 ec       	ldi	r30, 0xC0	; 192
 20c:	f0 e0       	ldi	r31, 0x00	; 0
		UDR0=*data; //print char at current pointer
 20e:	c6 ec       	ldi	r28, 0xC6	; 198
 210:	d0 e0       	ldi	r29, 0x00	; 0
	return 0;
}

void USART_tx_string(char* data){
	while((*data!='\0')){ //print until null
		while(!(UCSR0A &(1<<UDRE0))); //check if transmit buffer is ready for new data
 212:	90 81       	ld	r25, Z
 214:	95 ff       	sbrs	r25, 5
 216:	fd cf       	rjmp	.-6      	; 0x212 <USART_tx_string+0x18>
		UDR0=*data; //print char at current pointer
 218:	28 83       	st	Y, r18
	UDR0 = c;    //send the character
	return 0;
}

void USART_tx_string(char* data){
	while((*data!='\0')){ //print until null
 21a:	2d 91       	ld	r18, X+
 21c:	21 11       	cpse	r18, r1
 21e:	f9 cf       	rjmp	.-14     	; 0x212 <USART_tx_string+0x18>
		while(!(UCSR0A &(1<<UDRE0))); //check if transmit buffer is ready for new data
		UDR0=*data; //print char at current pointer
		data++; //iterate char pointer
	}
}
 220:	df 91       	pop	r29
 222:	cf 91       	pop	r28
 224:	08 95       	ret

00000226 <main>:
void USART_tx_string(char*);
static int put_char(char c, FILE *stream); //required for printf
static FILE mystdout = FDEV_SETUP_STREAM(put_char, NULL, _FDEV_SETUP_WRITE); //required for printf

int main(void)
{
 226:	cf 93       	push	r28
 228:	df 93       	push	r29
 22a:	cd b7       	in	r28, 0x3d	; 61
 22c:	de b7       	in	r29, 0x3e	; 62
 22e:	29 97       	sbiw	r28, 0x09	; 9
 230:	0f b6       	in	r0, 0x3f	; 63
 232:	f8 94       	cli
 234:	de bf       	out	0x3e, r29	; 62
 236:	0f be       	out	0x3f, r0	; 63
 238:	cd bf       	out	0x3d, r28	; 61
	DDRB = 0; //input for LO- and LO+ from AD8232
 23a:	14 b8       	out	0x04, r1	; 4

	char c[9]; //holds converted value in string
	stdout = &mystdout; //set the output stream
 23c:	80 e0       	ldi	r24, 0x00	; 0
 23e:	91 e0       	ldi	r25, 0x01	; 1
 240:	90 93 13 01 	sts	0x0113, r25	; 0x800113 <__data_end+0x3>
 244:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <__data_end+0x2>

	init_USART();
 248:	0e 94 da 00 	call	0x1b4	; 0x1b4 <init_USART>
	init_ADC();
 24c:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <init_ADC>
			uint8_t low; //ADCL
			uint16_t all = 0; //ADC 10 bit
			uint16_t avg = 0;
		
			for(int i=0;i < 100 ; i++){ //grab 100 data points and sum then average.
				ADCSRA |= (1 << ADSC); //start the conversion. while in free running mode it will
 250:	0f 2e       	mov	r0, r31
 252:	fa e7       	ldi	r31, 0x7A	; 122
 254:	ef 2e       	mov	r14, r31
 256:	f1 2c       	mov	r15, r1
 258:	f0 2d       	mov	r31, r0
				while((ADCSRA&(1 << ADIF))==0); //check if conversion done
				ADCSRA |= (1 << ADIF); //reset flag
				low = ADCL;
 25a:	0f 2e       	mov	r0, r31
 25c:	f8 e7       	ldi	r31, 0x78	; 120
 25e:	af 2e       	mov	r10, r31
 260:	b1 2c       	mov	r11, r1
 262:	f0 2d       	mov	r31, r0
				all = ADCH << 8 | low;
 264:	0f 2e       	mov	r0, r31
 266:	f9 e7       	ldi	r31, 0x79	; 121
 268:	cf 2e       	mov	r12, r31
 26a:	d1 2c       	mov	r13, r1
 26c:	f0 2d       	mov	r31, r0
void USART_tx_string(char*);
static int put_char(char c, FILE *stream); //required for printf
static FILE mystdout = FDEV_SETUP_STREAM(put_char, NULL, _FDEV_SETUP_WRITE); //required for printf

int main(void)
{
 26e:	44 e6       	ldi	r20, 0x64	; 100
 270:	50 e0       	ldi	r21, 0x00	; 0
	init_ADC();

	while(1){
			uint8_t low; //ADCL
			uint16_t all = 0; //ADC 10 bit
			uint16_t avg = 0;
 272:	20 e0       	ldi	r18, 0x00	; 0
 274:	30 e0       	ldi	r19, 0x00	; 0
		
			for(int i=0;i < 100 ; i++){ //grab 100 data points and sum then average.
				ADCSRA |= (1 << ADSC); //start the conversion. while in free running mode it will
 276:	f7 01       	movw	r30, r14
 278:	80 81       	ld	r24, Z
 27a:	80 64       	ori	r24, 0x40	; 64
 27c:	80 83       	st	Z, r24
				while((ADCSRA&(1 << ADIF))==0); //check if conversion done
 27e:	f7 01       	movw	r30, r14
 280:	80 81       	ld	r24, Z
 282:	84 ff       	sbrs	r24, 4
 284:	fc cf       	rjmp	.-8      	; 0x27e <main+0x58>
				ADCSRA |= (1 << ADIF); //reset flag
 286:	80 81       	ld	r24, Z
 288:	80 61       	ori	r24, 0x10	; 16
 28a:	80 83       	st	Z, r24
				low = ADCL;
 28c:	f5 01       	movw	r30, r10
 28e:	80 81       	ld	r24, Z
				all = ADCH << 8 | low;
 290:	f6 01       	movw	r30, r12
 292:	60 81       	ld	r22, Z
				avg += all;
 294:	90 e0       	ldi	r25, 0x00	; 0
 296:	96 2b       	or	r25, r22
 298:	28 0f       	add	r18, r24
 29a:	39 1f       	adc	r19, r25
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 29c:	8f ec       	ldi	r24, 0xCF	; 207
 29e:	97 e0       	ldi	r25, 0x07	; 7
 2a0:	01 97       	sbiw	r24, 0x01	; 1
 2a2:	f1 f7       	brne	.-4      	; 0x2a0 <main+0x7a>
 2a4:	00 c0       	rjmp	.+0      	; 0x2a6 <main+0x80>
 2a6:	00 00       	nop
 2a8:	41 50       	subi	r20, 0x01	; 1
 2aa:	51 09       	sbc	r21, r1
	while(1){
			uint8_t low; //ADCL
			uint16_t all = 0; //ADC 10 bit
			uint16_t avg = 0;
		
			for(int i=0;i < 100 ; i++){ //grab 100 data points and sum then average.
 2ac:	21 f7       	brne	.-56     	; 0x276 <main+0x50>
				_delay_us(1000);
			}
			
			all = avg/10; //average and scale down so its easier to see
			
			dtostrf(all,3,1,c); //convert double to string
 2ae:	ad ec       	ldi	r26, 0xCD	; 205
 2b0:	bc ec       	ldi	r27, 0xCC	; 204
 2b2:	0e 94 bb 01 	call	0x376	; 0x376 <__umulhisi3>
 2b6:	96 95       	lsr	r25
 2b8:	87 95       	ror	r24
 2ba:	96 95       	lsr	r25
 2bc:	87 95       	ror	r24
 2be:	96 95       	lsr	r25
 2c0:	87 95       	ror	r24
 2c2:	bc 01       	movw	r22, r24
 2c4:	80 e0       	ldi	r24, 0x00	; 0
 2c6:	90 e0       	ldi	r25, 0x00	; 0
 2c8:	0e 94 7e 01 	call	0x2fc	; 0x2fc <__floatunsisf>
 2cc:	8e 01       	movw	r16, r28
 2ce:	0f 5f       	subi	r16, 0xFF	; 255
 2d0:	1f 4f       	sbci	r17, 0xFF	; 255
 2d2:	21 e0       	ldi	r18, 0x01	; 1
 2d4:	43 e0       	ldi	r20, 0x03	; 3
 2d6:	0e 94 ca 01 	call	0x394	; 0x394 <dtostrf>
			if(PINB & 0b00000011){
 2da:	83 b1       	in	r24, 0x03	; 3
 2dc:	83 70       	andi	r24, 0x03	; 3
 2de:	29 f0       	breq	.+10     	; 0x2ea <main+0xc4>
				printf("0");//not connected
 2e0:	80 e3       	ldi	r24, 0x30	; 48
 2e2:	90 e0       	ldi	r25, 0x00	; 0
 2e4:	0e 94 ea 01 	call	0x3d4	; 0x3d4 <putchar>
 2e8:	04 c0       	rjmp	.+8      	; 0x2f2 <main+0xcc>
			}
			else 
				USART_tx_string(c); //print value to terminal
 2ea:	ce 01       	movw	r24, r28
 2ec:	01 96       	adiw	r24, 0x01	; 1
 2ee:	0e 94 fd 00 	call	0x1fa	; 0x1fa <USART_tx_string>
			
			printf("\r\n");
 2f2:	8e e0       	ldi	r24, 0x0E	; 14
 2f4:	91 e0       	ldi	r25, 0x01	; 1
 2f6:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <puts>
	}
 2fa:	b9 cf       	rjmp	.-142    	; 0x26e <main+0x48>

000002fc <__floatunsisf>:
 2fc:	e8 94       	clt
 2fe:	09 c0       	rjmp	.+18     	; 0x312 <__floatsisf+0x12>

00000300 <__floatsisf>:
 300:	97 fb       	bst	r25, 7
 302:	3e f4       	brtc	.+14     	; 0x312 <__floatsisf+0x12>
 304:	90 95       	com	r25
 306:	80 95       	com	r24
 308:	70 95       	com	r23
 30a:	61 95       	neg	r22
 30c:	7f 4f       	sbci	r23, 0xFF	; 255
 30e:	8f 4f       	sbci	r24, 0xFF	; 255
 310:	9f 4f       	sbci	r25, 0xFF	; 255
 312:	99 23       	and	r25, r25
 314:	a9 f0       	breq	.+42     	; 0x340 <__floatsisf+0x40>
 316:	f9 2f       	mov	r31, r25
 318:	96 e9       	ldi	r25, 0x96	; 150
 31a:	bb 27       	eor	r27, r27
 31c:	93 95       	inc	r25
 31e:	f6 95       	lsr	r31
 320:	87 95       	ror	r24
 322:	77 95       	ror	r23
 324:	67 95       	ror	r22
 326:	b7 95       	ror	r27
 328:	f1 11       	cpse	r31, r1
 32a:	f8 cf       	rjmp	.-16     	; 0x31c <__floatsisf+0x1c>
 32c:	fa f4       	brpl	.+62     	; 0x36c <__floatsisf+0x6c>
 32e:	bb 0f       	add	r27, r27
 330:	11 f4       	brne	.+4      	; 0x336 <__floatsisf+0x36>
 332:	60 ff       	sbrs	r22, 0
 334:	1b c0       	rjmp	.+54     	; 0x36c <__floatsisf+0x6c>
 336:	6f 5f       	subi	r22, 0xFF	; 255
 338:	7f 4f       	sbci	r23, 0xFF	; 255
 33a:	8f 4f       	sbci	r24, 0xFF	; 255
 33c:	9f 4f       	sbci	r25, 0xFF	; 255
 33e:	16 c0       	rjmp	.+44     	; 0x36c <__floatsisf+0x6c>
 340:	88 23       	and	r24, r24
 342:	11 f0       	breq	.+4      	; 0x348 <__floatsisf+0x48>
 344:	96 e9       	ldi	r25, 0x96	; 150
 346:	11 c0       	rjmp	.+34     	; 0x36a <__floatsisf+0x6a>
 348:	77 23       	and	r23, r23
 34a:	21 f0       	breq	.+8      	; 0x354 <__floatsisf+0x54>
 34c:	9e e8       	ldi	r25, 0x8E	; 142
 34e:	87 2f       	mov	r24, r23
 350:	76 2f       	mov	r23, r22
 352:	05 c0       	rjmp	.+10     	; 0x35e <__floatsisf+0x5e>
 354:	66 23       	and	r22, r22
 356:	71 f0       	breq	.+28     	; 0x374 <__floatsisf+0x74>
 358:	96 e8       	ldi	r25, 0x86	; 134
 35a:	86 2f       	mov	r24, r22
 35c:	70 e0       	ldi	r23, 0x00	; 0
 35e:	60 e0       	ldi	r22, 0x00	; 0
 360:	2a f0       	brmi	.+10     	; 0x36c <__floatsisf+0x6c>
 362:	9a 95       	dec	r25
 364:	66 0f       	add	r22, r22
 366:	77 1f       	adc	r23, r23
 368:	88 1f       	adc	r24, r24
 36a:	da f7       	brpl	.-10     	; 0x362 <__floatsisf+0x62>
 36c:	88 0f       	add	r24, r24
 36e:	96 95       	lsr	r25
 370:	87 95       	ror	r24
 372:	97 f9       	bld	r25, 7
 374:	08 95       	ret

00000376 <__umulhisi3>:
 376:	a2 9f       	mul	r26, r18
 378:	b0 01       	movw	r22, r0
 37a:	b3 9f       	mul	r27, r19
 37c:	c0 01       	movw	r24, r0
 37e:	a3 9f       	mul	r26, r19
 380:	70 0d       	add	r23, r0
 382:	81 1d       	adc	r24, r1
 384:	11 24       	eor	r1, r1
 386:	91 1d       	adc	r25, r1
 388:	b2 9f       	mul	r27, r18
 38a:	70 0d       	add	r23, r0
 38c:	81 1d       	adc	r24, r1
 38e:	11 24       	eor	r1, r1
 390:	91 1d       	adc	r25, r1
 392:	08 95       	ret

00000394 <dtostrf>:
 394:	ef 92       	push	r14
 396:	0f 93       	push	r16
 398:	1f 93       	push	r17
 39a:	cf 93       	push	r28
 39c:	df 93       	push	r29
 39e:	e8 01       	movw	r28, r16
 3a0:	47 fd       	sbrc	r20, 7
 3a2:	02 c0       	rjmp	.+4      	; 0x3a8 <dtostrf+0x14>
 3a4:	34 e0       	ldi	r19, 0x04	; 4
 3a6:	01 c0       	rjmp	.+2      	; 0x3aa <dtostrf+0x16>
 3a8:	34 e1       	ldi	r19, 0x14	; 20
 3aa:	04 2e       	mov	r0, r20
 3ac:	00 0c       	add	r0, r0
 3ae:	55 0b       	sbc	r21, r21
 3b0:	57 ff       	sbrs	r21, 7
 3b2:	03 c0       	rjmp	.+6      	; 0x3ba <dtostrf+0x26>
 3b4:	51 95       	neg	r21
 3b6:	41 95       	neg	r20
 3b8:	51 09       	sbc	r21, r1
 3ba:	e3 2e       	mov	r14, r19
 3bc:	02 2f       	mov	r16, r18
 3be:	24 2f       	mov	r18, r20
 3c0:	ae 01       	movw	r20, r28
 3c2:	0e 94 21 02 	call	0x442	; 0x442 <dtoa_prf>
 3c6:	ce 01       	movw	r24, r28
 3c8:	df 91       	pop	r29
 3ca:	cf 91       	pop	r28
 3cc:	1f 91       	pop	r17
 3ce:	0f 91       	pop	r16
 3d0:	ef 90       	pop	r14
 3d2:	08 95       	ret

000003d4 <putchar>:
 3d4:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <__data_end+0x2>
 3d8:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <__data_end+0x3>
 3dc:	0e 94 53 04 	call	0x8a6	; 0x8a6 <fputc>
 3e0:	08 95       	ret

000003e2 <puts>:
 3e2:	0f 93       	push	r16
 3e4:	1f 93       	push	r17
 3e6:	cf 93       	push	r28
 3e8:	df 93       	push	r29
 3ea:	e0 91 12 01 	lds	r30, 0x0112	; 0x800112 <__data_end+0x2>
 3ee:	f0 91 13 01 	lds	r31, 0x0113	; 0x800113 <__data_end+0x3>
 3f2:	23 81       	ldd	r18, Z+3	; 0x03
 3f4:	21 ff       	sbrs	r18, 1
 3f6:	1b c0       	rjmp	.+54     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 3f8:	8c 01       	movw	r16, r24
 3fa:	d0 e0       	ldi	r29, 0x00	; 0
 3fc:	c0 e0       	ldi	r28, 0x00	; 0
 3fe:	f8 01       	movw	r30, r16
 400:	81 91       	ld	r24, Z+
 402:	8f 01       	movw	r16, r30
 404:	60 91 12 01 	lds	r22, 0x0112	; 0x800112 <__data_end+0x2>
 408:	70 91 13 01 	lds	r23, 0x0113	; 0x800113 <__data_end+0x3>
 40c:	db 01       	movw	r26, r22
 40e:	18 96       	adiw	r26, 0x08	; 8
 410:	ed 91       	ld	r30, X+
 412:	fc 91       	ld	r31, X
 414:	19 97       	sbiw	r26, 0x09	; 9
 416:	88 23       	and	r24, r24
 418:	31 f0       	breq	.+12     	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 41a:	09 95       	icall
 41c:	89 2b       	or	r24, r25
 41e:	79 f3       	breq	.-34     	; 0x3fe <puts+0x1c>
 420:	df ef       	ldi	r29, 0xFF	; 255
 422:	cf ef       	ldi	r28, 0xFF	; 255
 424:	ec cf       	rjmp	.-40     	; 0x3fe <puts+0x1c>
 426:	8a e0       	ldi	r24, 0x0A	; 10
 428:	09 95       	icall
 42a:	89 2b       	or	r24, r25
 42c:	19 f0       	breq	.+6      	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
 42e:	8f ef       	ldi	r24, 0xFF	; 255
 430:	9f ef       	ldi	r25, 0xFF	; 255
 432:	02 c0       	rjmp	.+4      	; 0x438 <__LOCK_REGION_LENGTH__+0x38>
 434:	8d 2f       	mov	r24, r29
 436:	9c 2f       	mov	r25, r28
 438:	df 91       	pop	r29
 43a:	cf 91       	pop	r28
 43c:	1f 91       	pop	r17
 43e:	0f 91       	pop	r16
 440:	08 95       	ret

00000442 <dtoa_prf>:
 442:	a9 e0       	ldi	r26, 0x09	; 9
 444:	b0 e0       	ldi	r27, 0x00	; 0
 446:	e7 e2       	ldi	r30, 0x27	; 39
 448:	f2 e0       	ldi	r31, 0x02	; 2
 44a:	0c 94 95 04 	jmp	0x92a	; 0x92a <__prologue_saves__+0xc>
 44e:	6a 01       	movw	r12, r20
 450:	12 2f       	mov	r17, r18
 452:	b0 2e       	mov	r11, r16
 454:	2b e3       	ldi	r18, 0x3B	; 59
 456:	20 17       	cp	r18, r16
 458:	20 f0       	brcs	.+8      	; 0x462 <dtoa_prf+0x20>
 45a:	ff 24       	eor	r15, r15
 45c:	f3 94       	inc	r15
 45e:	f0 0e       	add	r15, r16
 460:	02 c0       	rjmp	.+4      	; 0x466 <dtoa_prf+0x24>
 462:	2c e3       	ldi	r18, 0x3C	; 60
 464:	f2 2e       	mov	r15, r18
 466:	0f 2d       	mov	r16, r15
 468:	27 e0       	ldi	r18, 0x07	; 7
 46a:	ae 01       	movw	r20, r28
 46c:	4f 5f       	subi	r20, 0xFF	; 255
 46e:	5f 4f       	sbci	r21, 0xFF	; 255
 470:	0e 94 7b 03 	call	0x6f6	; 0x6f6 <__ftoa_engine>
 474:	bc 01       	movw	r22, r24
 476:	49 81       	ldd	r20, Y+1	; 0x01
 478:	84 2f       	mov	r24, r20
 47a:	89 70       	andi	r24, 0x09	; 9
 47c:	81 30       	cpi	r24, 0x01	; 1
 47e:	31 f0       	breq	.+12     	; 0x48c <dtoa_prf+0x4a>
 480:	e1 fc       	sbrc	r14, 1
 482:	06 c0       	rjmp	.+12     	; 0x490 <dtoa_prf+0x4e>
 484:	e0 fe       	sbrs	r14, 0
 486:	06 c0       	rjmp	.+12     	; 0x494 <dtoa_prf+0x52>
 488:	90 e2       	ldi	r25, 0x20	; 32
 48a:	05 c0       	rjmp	.+10     	; 0x496 <dtoa_prf+0x54>
 48c:	9d e2       	ldi	r25, 0x2D	; 45
 48e:	03 c0       	rjmp	.+6      	; 0x496 <dtoa_prf+0x54>
 490:	9b e2       	ldi	r25, 0x2B	; 43
 492:	01 c0       	rjmp	.+2      	; 0x496 <dtoa_prf+0x54>
 494:	90 e0       	ldi	r25, 0x00	; 0
 496:	5e 2d       	mov	r21, r14
 498:	50 71       	andi	r21, 0x10	; 16
 49a:	43 ff       	sbrs	r20, 3
 49c:	3c c0       	rjmp	.+120    	; 0x516 <dtoa_prf+0xd4>
 49e:	91 11       	cpse	r25, r1
 4a0:	02 c0       	rjmp	.+4      	; 0x4a6 <dtoa_prf+0x64>
 4a2:	83 e0       	ldi	r24, 0x03	; 3
 4a4:	01 c0       	rjmp	.+2      	; 0x4a8 <dtoa_prf+0x66>
 4a6:	84 e0       	ldi	r24, 0x04	; 4
 4a8:	81 17       	cp	r24, r17
 4aa:	18 f4       	brcc	.+6      	; 0x4b2 <dtoa_prf+0x70>
 4ac:	21 2f       	mov	r18, r17
 4ae:	28 1b       	sub	r18, r24
 4b0:	01 c0       	rjmp	.+2      	; 0x4b4 <dtoa_prf+0x72>
 4b2:	20 e0       	ldi	r18, 0x00	; 0
 4b4:	51 11       	cpse	r21, r1
 4b6:	0b c0       	rjmp	.+22     	; 0x4ce <dtoa_prf+0x8c>
 4b8:	f6 01       	movw	r30, r12
 4ba:	82 2f       	mov	r24, r18
 4bc:	30 e2       	ldi	r19, 0x20	; 32
 4be:	88 23       	and	r24, r24
 4c0:	19 f0       	breq	.+6      	; 0x4c8 <dtoa_prf+0x86>
 4c2:	31 93       	st	Z+, r19
 4c4:	81 50       	subi	r24, 0x01	; 1
 4c6:	fb cf       	rjmp	.-10     	; 0x4be <dtoa_prf+0x7c>
 4c8:	c2 0e       	add	r12, r18
 4ca:	d1 1c       	adc	r13, r1
 4cc:	20 e0       	ldi	r18, 0x00	; 0
 4ce:	99 23       	and	r25, r25
 4d0:	29 f0       	breq	.+10     	; 0x4dc <dtoa_prf+0x9a>
 4d2:	d6 01       	movw	r26, r12
 4d4:	9c 93       	st	X, r25
 4d6:	f6 01       	movw	r30, r12
 4d8:	31 96       	adiw	r30, 0x01	; 1
 4da:	6f 01       	movw	r12, r30
 4dc:	c6 01       	movw	r24, r12
 4de:	03 96       	adiw	r24, 0x03	; 3
 4e0:	e2 fe       	sbrs	r14, 2
 4e2:	0a c0       	rjmp	.+20     	; 0x4f8 <dtoa_prf+0xb6>
 4e4:	3e e4       	ldi	r19, 0x4E	; 78
 4e6:	d6 01       	movw	r26, r12
 4e8:	3c 93       	st	X, r19
 4ea:	41 e4       	ldi	r20, 0x41	; 65
 4ec:	11 96       	adiw	r26, 0x01	; 1
 4ee:	4c 93       	st	X, r20
 4f0:	11 97       	sbiw	r26, 0x01	; 1
 4f2:	12 96       	adiw	r26, 0x02	; 2
 4f4:	3c 93       	st	X, r19
 4f6:	06 c0       	rjmp	.+12     	; 0x504 <dtoa_prf+0xc2>
 4f8:	3e e6       	ldi	r19, 0x6E	; 110
 4fa:	f6 01       	movw	r30, r12
 4fc:	30 83       	st	Z, r19
 4fe:	41 e6       	ldi	r20, 0x61	; 97
 500:	41 83       	std	Z+1, r20	; 0x01
 502:	32 83       	std	Z+2, r19	; 0x02
 504:	fc 01       	movw	r30, r24
 506:	32 2f       	mov	r19, r18
 508:	40 e2       	ldi	r20, 0x20	; 32
 50a:	33 23       	and	r19, r19
 50c:	09 f4       	brne	.+2      	; 0x510 <dtoa_prf+0xce>
 50e:	42 c0       	rjmp	.+132    	; 0x594 <dtoa_prf+0x152>
 510:	41 93       	st	Z+, r20
 512:	31 50       	subi	r19, 0x01	; 1
 514:	fa cf       	rjmp	.-12     	; 0x50a <dtoa_prf+0xc8>
 516:	42 ff       	sbrs	r20, 2
 518:	44 c0       	rjmp	.+136    	; 0x5a2 <dtoa_prf+0x160>
 51a:	91 11       	cpse	r25, r1
 51c:	02 c0       	rjmp	.+4      	; 0x522 <dtoa_prf+0xe0>
 51e:	83 e0       	ldi	r24, 0x03	; 3
 520:	01 c0       	rjmp	.+2      	; 0x524 <dtoa_prf+0xe2>
 522:	84 e0       	ldi	r24, 0x04	; 4
 524:	81 17       	cp	r24, r17
 526:	18 f4       	brcc	.+6      	; 0x52e <dtoa_prf+0xec>
 528:	21 2f       	mov	r18, r17
 52a:	28 1b       	sub	r18, r24
 52c:	01 c0       	rjmp	.+2      	; 0x530 <dtoa_prf+0xee>
 52e:	20 e0       	ldi	r18, 0x00	; 0
 530:	51 11       	cpse	r21, r1
 532:	0b c0       	rjmp	.+22     	; 0x54a <dtoa_prf+0x108>
 534:	f6 01       	movw	r30, r12
 536:	82 2f       	mov	r24, r18
 538:	30 e2       	ldi	r19, 0x20	; 32
 53a:	88 23       	and	r24, r24
 53c:	19 f0       	breq	.+6      	; 0x544 <dtoa_prf+0x102>
 53e:	31 93       	st	Z+, r19
 540:	81 50       	subi	r24, 0x01	; 1
 542:	fb cf       	rjmp	.-10     	; 0x53a <dtoa_prf+0xf8>
 544:	c2 0e       	add	r12, r18
 546:	d1 1c       	adc	r13, r1
 548:	20 e0       	ldi	r18, 0x00	; 0
 54a:	99 23       	and	r25, r25
 54c:	29 f0       	breq	.+10     	; 0x558 <dtoa_prf+0x116>
 54e:	d6 01       	movw	r26, r12
 550:	9c 93       	st	X, r25
 552:	f6 01       	movw	r30, r12
 554:	31 96       	adiw	r30, 0x01	; 1
 556:	6f 01       	movw	r12, r30
 558:	c6 01       	movw	r24, r12
 55a:	03 96       	adiw	r24, 0x03	; 3
 55c:	e2 fe       	sbrs	r14, 2
 55e:	0b c0       	rjmp	.+22     	; 0x576 <dtoa_prf+0x134>
 560:	39 e4       	ldi	r19, 0x49	; 73
 562:	d6 01       	movw	r26, r12
 564:	3c 93       	st	X, r19
 566:	3e e4       	ldi	r19, 0x4E	; 78
 568:	11 96       	adiw	r26, 0x01	; 1
 56a:	3c 93       	st	X, r19
 56c:	11 97       	sbiw	r26, 0x01	; 1
 56e:	36 e4       	ldi	r19, 0x46	; 70
 570:	12 96       	adiw	r26, 0x02	; 2
 572:	3c 93       	st	X, r19
 574:	07 c0       	rjmp	.+14     	; 0x584 <dtoa_prf+0x142>
 576:	39 e6       	ldi	r19, 0x69	; 105
 578:	f6 01       	movw	r30, r12
 57a:	30 83       	st	Z, r19
 57c:	3e e6       	ldi	r19, 0x6E	; 110
 57e:	31 83       	std	Z+1, r19	; 0x01
 580:	36 e6       	ldi	r19, 0x66	; 102
 582:	32 83       	std	Z+2, r19	; 0x02
 584:	fc 01       	movw	r30, r24
 586:	32 2f       	mov	r19, r18
 588:	40 e2       	ldi	r20, 0x20	; 32
 58a:	33 23       	and	r19, r19
 58c:	19 f0       	breq	.+6      	; 0x594 <dtoa_prf+0x152>
 58e:	41 93       	st	Z+, r20
 590:	31 50       	subi	r19, 0x01	; 1
 592:	fb cf       	rjmp	.-10     	; 0x58a <dtoa_prf+0x148>
 594:	fc 01       	movw	r30, r24
 596:	e2 0f       	add	r30, r18
 598:	f1 1d       	adc	r31, r1
 59a:	10 82       	st	Z, r1
 59c:	8e ef       	ldi	r24, 0xFE	; 254
 59e:	9f ef       	ldi	r25, 0xFF	; 255
 5a0:	a6 c0       	rjmp	.+332    	; 0x6ee <dtoa_prf+0x2ac>
 5a2:	21 e0       	ldi	r18, 0x01	; 1
 5a4:	30 e0       	ldi	r19, 0x00	; 0
 5a6:	91 11       	cpse	r25, r1
 5a8:	02 c0       	rjmp	.+4      	; 0x5ae <dtoa_prf+0x16c>
 5aa:	20 e0       	ldi	r18, 0x00	; 0
 5ac:	30 e0       	ldi	r19, 0x00	; 0
 5ae:	16 16       	cp	r1, r22
 5b0:	17 06       	cpc	r1, r23
 5b2:	1c f4       	brge	.+6      	; 0x5ba <dtoa_prf+0x178>
 5b4:	fb 01       	movw	r30, r22
 5b6:	31 96       	adiw	r30, 0x01	; 1
 5b8:	02 c0       	rjmp	.+4      	; 0x5be <dtoa_prf+0x17c>
 5ba:	e1 e0       	ldi	r30, 0x01	; 1
 5bc:	f0 e0       	ldi	r31, 0x00	; 0
 5be:	2e 0f       	add	r18, r30
 5c0:	3f 1f       	adc	r19, r31
 5c2:	bb 20       	and	r11, r11
 5c4:	21 f0       	breq	.+8      	; 0x5ce <dtoa_prf+0x18c>
 5c6:	eb 2d       	mov	r30, r11
 5c8:	f0 e0       	ldi	r31, 0x00	; 0
 5ca:	31 96       	adiw	r30, 0x01	; 1
 5cc:	02 c0       	rjmp	.+4      	; 0x5d2 <dtoa_prf+0x190>
 5ce:	e0 e0       	ldi	r30, 0x00	; 0
 5d0:	f0 e0       	ldi	r31, 0x00	; 0
 5d2:	2e 0f       	add	r18, r30
 5d4:	3f 1f       	adc	r19, r31
 5d6:	e1 2f       	mov	r30, r17
 5d8:	f0 e0       	ldi	r31, 0x00	; 0
 5da:	2e 17       	cp	r18, r30
 5dc:	3f 07       	cpc	r19, r31
 5de:	1c f4       	brge	.+6      	; 0x5e6 <dtoa_prf+0x1a4>
 5e0:	12 1b       	sub	r17, r18
 5e2:	21 2f       	mov	r18, r17
 5e4:	01 c0       	rjmp	.+2      	; 0x5e8 <dtoa_prf+0x1a6>
 5e6:	20 e0       	ldi	r18, 0x00	; 0
 5e8:	8e 2d       	mov	r24, r14
 5ea:	88 71       	andi	r24, 0x18	; 24
 5ec:	59 f4       	brne	.+22     	; 0x604 <dtoa_prf+0x1c2>
 5ee:	f6 01       	movw	r30, r12
 5f0:	82 2f       	mov	r24, r18
 5f2:	30 e2       	ldi	r19, 0x20	; 32
 5f4:	88 23       	and	r24, r24
 5f6:	19 f0       	breq	.+6      	; 0x5fe <dtoa_prf+0x1bc>
 5f8:	31 93       	st	Z+, r19
 5fa:	81 50       	subi	r24, 0x01	; 1
 5fc:	fb cf       	rjmp	.-10     	; 0x5f4 <dtoa_prf+0x1b2>
 5fe:	c2 0e       	add	r12, r18
 600:	d1 1c       	adc	r13, r1
 602:	20 e0       	ldi	r18, 0x00	; 0
 604:	99 23       	and	r25, r25
 606:	29 f0       	breq	.+10     	; 0x612 <dtoa_prf+0x1d0>
 608:	d6 01       	movw	r26, r12
 60a:	9c 93       	st	X, r25
 60c:	f6 01       	movw	r30, r12
 60e:	31 96       	adiw	r30, 0x01	; 1
 610:	6f 01       	movw	r12, r30
 612:	51 11       	cpse	r21, r1
 614:	0b c0       	rjmp	.+22     	; 0x62c <dtoa_prf+0x1ea>
 616:	f6 01       	movw	r30, r12
 618:	82 2f       	mov	r24, r18
 61a:	90 e3       	ldi	r25, 0x30	; 48
 61c:	88 23       	and	r24, r24
 61e:	19 f0       	breq	.+6      	; 0x626 <dtoa_prf+0x1e4>
 620:	91 93       	st	Z+, r25
 622:	81 50       	subi	r24, 0x01	; 1
 624:	fb cf       	rjmp	.-10     	; 0x61c <dtoa_prf+0x1da>
 626:	c2 0e       	add	r12, r18
 628:	d1 1c       	adc	r13, r1
 62a:	20 e0       	ldi	r18, 0x00	; 0
 62c:	0f 2d       	mov	r16, r15
 62e:	06 0f       	add	r16, r22
 630:	9a 81       	ldd	r25, Y+2	; 0x02
 632:	34 2f       	mov	r19, r20
 634:	30 71       	andi	r19, 0x10	; 16
 636:	44 ff       	sbrs	r20, 4
 638:	03 c0       	rjmp	.+6      	; 0x640 <dtoa_prf+0x1fe>
 63a:	91 33       	cpi	r25, 0x31	; 49
 63c:	09 f4       	brne	.+2      	; 0x640 <dtoa_prf+0x1fe>
 63e:	01 50       	subi	r16, 0x01	; 1
 640:	10 16       	cp	r1, r16
 642:	24 f4       	brge	.+8      	; 0x64c <dtoa_prf+0x20a>
 644:	09 30       	cpi	r16, 0x09	; 9
 646:	18 f0       	brcs	.+6      	; 0x64e <dtoa_prf+0x20c>
 648:	08 e0       	ldi	r16, 0x08	; 8
 64a:	01 c0       	rjmp	.+2      	; 0x64e <dtoa_prf+0x20c>
 64c:	01 e0       	ldi	r16, 0x01	; 1
 64e:	ab 01       	movw	r20, r22
 650:	77 ff       	sbrs	r23, 7
 652:	02 c0       	rjmp	.+4      	; 0x658 <dtoa_prf+0x216>
 654:	40 e0       	ldi	r20, 0x00	; 0
 656:	50 e0       	ldi	r21, 0x00	; 0
 658:	fb 01       	movw	r30, r22
 65a:	e4 1b       	sub	r30, r20
 65c:	f5 0b       	sbc	r31, r21
 65e:	a1 e0       	ldi	r26, 0x01	; 1
 660:	b0 e0       	ldi	r27, 0x00	; 0
 662:	ac 0f       	add	r26, r28
 664:	bd 1f       	adc	r27, r29
 666:	ea 0f       	add	r30, r26
 668:	fb 1f       	adc	r31, r27
 66a:	8e e2       	ldi	r24, 0x2E	; 46
 66c:	a8 2e       	mov	r10, r24
 66e:	4b 01       	movw	r8, r22
 670:	80 1a       	sub	r8, r16
 672:	91 08       	sbc	r9, r1
 674:	0b 2d       	mov	r16, r11
 676:	10 e0       	ldi	r17, 0x00	; 0
 678:	11 95       	neg	r17
 67a:	01 95       	neg	r16
 67c:	11 09       	sbc	r17, r1
 67e:	4f 3f       	cpi	r20, 0xFF	; 255
 680:	bf ef       	ldi	r27, 0xFF	; 255
 682:	5b 07       	cpc	r21, r27
 684:	21 f4       	brne	.+8      	; 0x68e <dtoa_prf+0x24c>
 686:	d6 01       	movw	r26, r12
 688:	ac 92       	st	X, r10
 68a:	11 96       	adiw	r26, 0x01	; 1
 68c:	6d 01       	movw	r12, r26
 68e:	64 17       	cp	r22, r20
 690:	75 07       	cpc	r23, r21
 692:	2c f0       	brlt	.+10     	; 0x69e <dtoa_prf+0x25c>
 694:	84 16       	cp	r8, r20
 696:	95 06       	cpc	r9, r21
 698:	14 f4       	brge	.+4      	; 0x69e <dtoa_prf+0x25c>
 69a:	81 81       	ldd	r24, Z+1	; 0x01
 69c:	01 c0       	rjmp	.+2      	; 0x6a0 <dtoa_prf+0x25e>
 69e:	80 e3       	ldi	r24, 0x30	; 48
 6a0:	41 50       	subi	r20, 0x01	; 1
 6a2:	51 09       	sbc	r21, r1
 6a4:	31 96       	adiw	r30, 0x01	; 1
 6a6:	d6 01       	movw	r26, r12
 6a8:	11 96       	adiw	r26, 0x01	; 1
 6aa:	7d 01       	movw	r14, r26
 6ac:	40 17       	cp	r20, r16
 6ae:	51 07       	cpc	r21, r17
 6b0:	24 f0       	brlt	.+8      	; 0x6ba <dtoa_prf+0x278>
 6b2:	d6 01       	movw	r26, r12
 6b4:	8c 93       	st	X, r24
 6b6:	67 01       	movw	r12, r14
 6b8:	e2 cf       	rjmp	.-60     	; 0x67e <dtoa_prf+0x23c>
 6ba:	64 17       	cp	r22, r20
 6bc:	75 07       	cpc	r23, r21
 6be:	39 f4       	brne	.+14     	; 0x6ce <dtoa_prf+0x28c>
 6c0:	96 33       	cpi	r25, 0x36	; 54
 6c2:	20 f4       	brcc	.+8      	; 0x6cc <dtoa_prf+0x28a>
 6c4:	95 33       	cpi	r25, 0x35	; 53
 6c6:	19 f4       	brne	.+6      	; 0x6ce <dtoa_prf+0x28c>
 6c8:	31 11       	cpse	r19, r1
 6ca:	01 c0       	rjmp	.+2      	; 0x6ce <dtoa_prf+0x28c>
 6cc:	81 e3       	ldi	r24, 0x31	; 49
 6ce:	f6 01       	movw	r30, r12
 6d0:	80 83       	st	Z, r24
 6d2:	f7 01       	movw	r30, r14
 6d4:	82 2f       	mov	r24, r18
 6d6:	90 e2       	ldi	r25, 0x20	; 32
 6d8:	88 23       	and	r24, r24
 6da:	19 f0       	breq	.+6      	; 0x6e2 <dtoa_prf+0x2a0>
 6dc:	91 93       	st	Z+, r25
 6de:	81 50       	subi	r24, 0x01	; 1
 6e0:	fb cf       	rjmp	.-10     	; 0x6d8 <dtoa_prf+0x296>
 6e2:	f7 01       	movw	r30, r14
 6e4:	e2 0f       	add	r30, r18
 6e6:	f1 1d       	adc	r31, r1
 6e8:	10 82       	st	Z, r1
 6ea:	80 e0       	ldi	r24, 0x00	; 0
 6ec:	90 e0       	ldi	r25, 0x00	; 0
 6ee:	29 96       	adiw	r28, 0x09	; 9
 6f0:	ec e0       	ldi	r30, 0x0C	; 12
 6f2:	0c 94 b1 04 	jmp	0x962	; 0x962 <__epilogue_restores__+0xc>

000006f6 <__ftoa_engine>:
 6f6:	28 30       	cpi	r18, 0x08	; 8
 6f8:	08 f0       	brcs	.+2      	; 0x6fc <__ftoa_engine+0x6>
 6fa:	27 e0       	ldi	r18, 0x07	; 7
 6fc:	33 27       	eor	r19, r19
 6fe:	da 01       	movw	r26, r20
 700:	99 0f       	add	r25, r25
 702:	31 1d       	adc	r19, r1
 704:	87 fd       	sbrc	r24, 7
 706:	91 60       	ori	r25, 0x01	; 1
 708:	00 96       	adiw	r24, 0x00	; 0
 70a:	61 05       	cpc	r22, r1
 70c:	71 05       	cpc	r23, r1
 70e:	39 f4       	brne	.+14     	; 0x71e <__ftoa_engine+0x28>
 710:	32 60       	ori	r19, 0x02	; 2
 712:	2e 5f       	subi	r18, 0xFE	; 254
 714:	3d 93       	st	X+, r19
 716:	30 e3       	ldi	r19, 0x30	; 48
 718:	2a 95       	dec	r18
 71a:	e1 f7       	brne	.-8      	; 0x714 <__ftoa_engine+0x1e>
 71c:	08 95       	ret
 71e:	9f 3f       	cpi	r25, 0xFF	; 255
 720:	30 f0       	brcs	.+12     	; 0x72e <__ftoa_engine+0x38>
 722:	80 38       	cpi	r24, 0x80	; 128
 724:	71 05       	cpc	r23, r1
 726:	61 05       	cpc	r22, r1
 728:	09 f0       	breq	.+2      	; 0x72c <__ftoa_engine+0x36>
 72a:	3c 5f       	subi	r19, 0xFC	; 252
 72c:	3c 5f       	subi	r19, 0xFC	; 252
 72e:	3d 93       	st	X+, r19
 730:	91 30       	cpi	r25, 0x01	; 1
 732:	08 f0       	brcs	.+2      	; 0x736 <__ftoa_engine+0x40>
 734:	80 68       	ori	r24, 0x80	; 128
 736:	91 1d       	adc	r25, r1
 738:	df 93       	push	r29
 73a:	cf 93       	push	r28
 73c:	1f 93       	push	r17
 73e:	0f 93       	push	r16
 740:	ff 92       	push	r15
 742:	ef 92       	push	r14
 744:	19 2f       	mov	r17, r25
 746:	98 7f       	andi	r25, 0xF8	; 248
 748:	96 95       	lsr	r25
 74a:	e9 2f       	mov	r30, r25
 74c:	96 95       	lsr	r25
 74e:	96 95       	lsr	r25
 750:	e9 0f       	add	r30, r25
 752:	ff 27       	eor	r31, r31
 754:	ee 53       	subi	r30, 0x3E	; 62
 756:	ff 4f       	sbci	r31, 0xFF	; 255
 758:	99 27       	eor	r25, r25
 75a:	33 27       	eor	r19, r19
 75c:	ee 24       	eor	r14, r14
 75e:	ff 24       	eor	r15, r15
 760:	a7 01       	movw	r20, r14
 762:	e7 01       	movw	r28, r14
 764:	05 90       	lpm	r0, Z+
 766:	08 94       	sec
 768:	07 94       	ror	r0
 76a:	28 f4       	brcc	.+10     	; 0x776 <__ftoa_engine+0x80>
 76c:	36 0f       	add	r19, r22
 76e:	e7 1e       	adc	r14, r23
 770:	f8 1e       	adc	r15, r24
 772:	49 1f       	adc	r20, r25
 774:	51 1d       	adc	r21, r1
 776:	66 0f       	add	r22, r22
 778:	77 1f       	adc	r23, r23
 77a:	88 1f       	adc	r24, r24
 77c:	99 1f       	adc	r25, r25
 77e:	06 94       	lsr	r0
 780:	a1 f7       	brne	.-24     	; 0x76a <__ftoa_engine+0x74>
 782:	05 90       	lpm	r0, Z+
 784:	07 94       	ror	r0
 786:	28 f4       	brcc	.+10     	; 0x792 <__ftoa_engine+0x9c>
 788:	e7 0e       	add	r14, r23
 78a:	f8 1e       	adc	r15, r24
 78c:	49 1f       	adc	r20, r25
 78e:	56 1f       	adc	r21, r22
 790:	c1 1d       	adc	r28, r1
 792:	77 0f       	add	r23, r23
 794:	88 1f       	adc	r24, r24
 796:	99 1f       	adc	r25, r25
 798:	66 1f       	adc	r22, r22
 79a:	06 94       	lsr	r0
 79c:	a1 f7       	brne	.-24     	; 0x786 <__ftoa_engine+0x90>
 79e:	05 90       	lpm	r0, Z+
 7a0:	07 94       	ror	r0
 7a2:	28 f4       	brcc	.+10     	; 0x7ae <__ftoa_engine+0xb8>
 7a4:	f8 0e       	add	r15, r24
 7a6:	49 1f       	adc	r20, r25
 7a8:	56 1f       	adc	r21, r22
 7aa:	c7 1f       	adc	r28, r23
 7ac:	d1 1d       	adc	r29, r1
 7ae:	88 0f       	add	r24, r24
 7b0:	99 1f       	adc	r25, r25
 7b2:	66 1f       	adc	r22, r22
 7b4:	77 1f       	adc	r23, r23
 7b6:	06 94       	lsr	r0
 7b8:	a1 f7       	brne	.-24     	; 0x7a2 <__ftoa_engine+0xac>
 7ba:	05 90       	lpm	r0, Z+
 7bc:	07 94       	ror	r0
 7be:	20 f4       	brcc	.+8      	; 0x7c8 <__ftoa_engine+0xd2>
 7c0:	49 0f       	add	r20, r25
 7c2:	56 1f       	adc	r21, r22
 7c4:	c7 1f       	adc	r28, r23
 7c6:	d8 1f       	adc	r29, r24
 7c8:	99 0f       	add	r25, r25
 7ca:	66 1f       	adc	r22, r22
 7cc:	77 1f       	adc	r23, r23
 7ce:	88 1f       	adc	r24, r24
 7d0:	06 94       	lsr	r0
 7d2:	a9 f7       	brne	.-22     	; 0x7be <__ftoa_engine+0xc8>
 7d4:	84 91       	lpm	r24, Z
 7d6:	10 95       	com	r17
 7d8:	17 70       	andi	r17, 0x07	; 7
 7da:	41 f0       	breq	.+16     	; 0x7ec <__ftoa_engine+0xf6>
 7dc:	d6 95       	lsr	r29
 7de:	c7 95       	ror	r28
 7e0:	57 95       	ror	r21
 7e2:	47 95       	ror	r20
 7e4:	f7 94       	ror	r15
 7e6:	e7 94       	ror	r14
 7e8:	1a 95       	dec	r17
 7ea:	c1 f7       	brne	.-16     	; 0x7dc <__ftoa_engine+0xe6>
 7ec:	e8 e6       	ldi	r30, 0x68	; 104
 7ee:	f0 e0       	ldi	r31, 0x00	; 0
 7f0:	68 94       	set
 7f2:	15 90       	lpm	r1, Z+
 7f4:	15 91       	lpm	r17, Z+
 7f6:	35 91       	lpm	r19, Z+
 7f8:	65 91       	lpm	r22, Z+
 7fa:	95 91       	lpm	r25, Z+
 7fc:	05 90       	lpm	r0, Z+
 7fe:	7f e2       	ldi	r23, 0x2F	; 47
 800:	73 95       	inc	r23
 802:	e1 18       	sub	r14, r1
 804:	f1 0a       	sbc	r15, r17
 806:	43 0b       	sbc	r20, r19
 808:	56 0b       	sbc	r21, r22
 80a:	c9 0b       	sbc	r28, r25
 80c:	d0 09       	sbc	r29, r0
 80e:	c0 f7       	brcc	.-16     	; 0x800 <__ftoa_engine+0x10a>
 810:	e1 0c       	add	r14, r1
 812:	f1 1e       	adc	r15, r17
 814:	43 1f       	adc	r20, r19
 816:	56 1f       	adc	r21, r22
 818:	c9 1f       	adc	r28, r25
 81a:	d0 1d       	adc	r29, r0
 81c:	7e f4       	brtc	.+30     	; 0x83c <__ftoa_engine+0x146>
 81e:	70 33       	cpi	r23, 0x30	; 48
 820:	11 f4       	brne	.+4      	; 0x826 <__ftoa_engine+0x130>
 822:	8a 95       	dec	r24
 824:	e6 cf       	rjmp	.-52     	; 0x7f2 <__ftoa_engine+0xfc>
 826:	e8 94       	clt
 828:	01 50       	subi	r16, 0x01	; 1
 82a:	30 f0       	brcs	.+12     	; 0x838 <__ftoa_engine+0x142>
 82c:	08 0f       	add	r16, r24
 82e:	0a f4       	brpl	.+2      	; 0x832 <__ftoa_engine+0x13c>
 830:	00 27       	eor	r16, r16
 832:	02 17       	cp	r16, r18
 834:	08 f4       	brcc	.+2      	; 0x838 <__ftoa_engine+0x142>
 836:	20 2f       	mov	r18, r16
 838:	23 95       	inc	r18
 83a:	02 2f       	mov	r16, r18
 83c:	7a 33       	cpi	r23, 0x3A	; 58
 83e:	28 f0       	brcs	.+10     	; 0x84a <__ftoa_engine+0x154>
 840:	79 e3       	ldi	r23, 0x39	; 57
 842:	7d 93       	st	X+, r23
 844:	2a 95       	dec	r18
 846:	e9 f7       	brne	.-6      	; 0x842 <__ftoa_engine+0x14c>
 848:	10 c0       	rjmp	.+32     	; 0x86a <__ftoa_engine+0x174>
 84a:	7d 93       	st	X+, r23
 84c:	2a 95       	dec	r18
 84e:	89 f6       	brne	.-94     	; 0x7f2 <__ftoa_engine+0xfc>
 850:	06 94       	lsr	r0
 852:	97 95       	ror	r25
 854:	67 95       	ror	r22
 856:	37 95       	ror	r19
 858:	17 95       	ror	r17
 85a:	17 94       	ror	r1
 85c:	e1 18       	sub	r14, r1
 85e:	f1 0a       	sbc	r15, r17
 860:	43 0b       	sbc	r20, r19
 862:	56 0b       	sbc	r21, r22
 864:	c9 0b       	sbc	r28, r25
 866:	d0 09       	sbc	r29, r0
 868:	98 f0       	brcs	.+38     	; 0x890 <__ftoa_engine+0x19a>
 86a:	23 95       	inc	r18
 86c:	7e 91       	ld	r23, -X
 86e:	73 95       	inc	r23
 870:	7a 33       	cpi	r23, 0x3A	; 58
 872:	08 f0       	brcs	.+2      	; 0x876 <__ftoa_engine+0x180>
 874:	70 e3       	ldi	r23, 0x30	; 48
 876:	7c 93       	st	X, r23
 878:	20 13       	cpse	r18, r16
 87a:	b8 f7       	brcc	.-18     	; 0x86a <__ftoa_engine+0x174>
 87c:	7e 91       	ld	r23, -X
 87e:	70 61       	ori	r23, 0x10	; 16
 880:	7d 93       	st	X+, r23
 882:	30 f0       	brcs	.+12     	; 0x890 <__ftoa_engine+0x19a>
 884:	83 95       	inc	r24
 886:	71 e3       	ldi	r23, 0x31	; 49
 888:	7d 93       	st	X+, r23
 88a:	70 e3       	ldi	r23, 0x30	; 48
 88c:	2a 95       	dec	r18
 88e:	e1 f7       	brne	.-8      	; 0x888 <__ftoa_engine+0x192>
 890:	11 24       	eor	r1, r1
 892:	ef 90       	pop	r14
 894:	ff 90       	pop	r15
 896:	0f 91       	pop	r16
 898:	1f 91       	pop	r17
 89a:	cf 91       	pop	r28
 89c:	df 91       	pop	r29
 89e:	99 27       	eor	r25, r25
 8a0:	87 fd       	sbrc	r24, 7
 8a2:	90 95       	com	r25
 8a4:	08 95       	ret

000008a6 <fputc>:
 8a6:	0f 93       	push	r16
 8a8:	1f 93       	push	r17
 8aa:	cf 93       	push	r28
 8ac:	df 93       	push	r29
 8ae:	fb 01       	movw	r30, r22
 8b0:	23 81       	ldd	r18, Z+3	; 0x03
 8b2:	21 fd       	sbrc	r18, 1
 8b4:	03 c0       	rjmp	.+6      	; 0x8bc <fputc+0x16>
 8b6:	8f ef       	ldi	r24, 0xFF	; 255
 8b8:	9f ef       	ldi	r25, 0xFF	; 255
 8ba:	2c c0       	rjmp	.+88     	; 0x914 <__stack+0x15>
 8bc:	22 ff       	sbrs	r18, 2
 8be:	16 c0       	rjmp	.+44     	; 0x8ec <fputc+0x46>
 8c0:	46 81       	ldd	r20, Z+6	; 0x06
 8c2:	57 81       	ldd	r21, Z+7	; 0x07
 8c4:	24 81       	ldd	r18, Z+4	; 0x04
 8c6:	35 81       	ldd	r19, Z+5	; 0x05
 8c8:	42 17       	cp	r20, r18
 8ca:	53 07       	cpc	r21, r19
 8cc:	44 f4       	brge	.+16     	; 0x8de <fputc+0x38>
 8ce:	a0 81       	ld	r26, Z
 8d0:	b1 81       	ldd	r27, Z+1	; 0x01
 8d2:	9d 01       	movw	r18, r26
 8d4:	2f 5f       	subi	r18, 0xFF	; 255
 8d6:	3f 4f       	sbci	r19, 0xFF	; 255
 8d8:	31 83       	std	Z+1, r19	; 0x01
 8da:	20 83       	st	Z, r18
 8dc:	8c 93       	st	X, r24
 8de:	26 81       	ldd	r18, Z+6	; 0x06
 8e0:	37 81       	ldd	r19, Z+7	; 0x07
 8e2:	2f 5f       	subi	r18, 0xFF	; 255
 8e4:	3f 4f       	sbci	r19, 0xFF	; 255
 8e6:	37 83       	std	Z+7, r19	; 0x07
 8e8:	26 83       	std	Z+6, r18	; 0x06
 8ea:	14 c0       	rjmp	.+40     	; 0x914 <__stack+0x15>
 8ec:	8b 01       	movw	r16, r22
 8ee:	ec 01       	movw	r28, r24
 8f0:	fb 01       	movw	r30, r22
 8f2:	00 84       	ldd	r0, Z+8	; 0x08
 8f4:	f1 85       	ldd	r31, Z+9	; 0x09
 8f6:	e0 2d       	mov	r30, r0
 8f8:	09 95       	icall
 8fa:	89 2b       	or	r24, r25
 8fc:	e1 f6       	brne	.-72     	; 0x8b6 <fputc+0x10>
 8fe:	d8 01       	movw	r26, r16
 900:	16 96       	adiw	r26, 0x06	; 6
 902:	8d 91       	ld	r24, X+
 904:	9c 91       	ld	r25, X
 906:	17 97       	sbiw	r26, 0x07	; 7
 908:	01 96       	adiw	r24, 0x01	; 1
 90a:	17 96       	adiw	r26, 0x07	; 7
 90c:	9c 93       	st	X, r25
 90e:	8e 93       	st	-X, r24
 910:	16 97       	sbiw	r26, 0x06	; 6
 912:	ce 01       	movw	r24, r28
 914:	df 91       	pop	r29
 916:	cf 91       	pop	r28
 918:	1f 91       	pop	r17
 91a:	0f 91       	pop	r16
 91c:	08 95       	ret

0000091e <__prologue_saves__>:
 91e:	2f 92       	push	r2
 920:	3f 92       	push	r3
 922:	4f 92       	push	r4
 924:	5f 92       	push	r5
 926:	6f 92       	push	r6
 928:	7f 92       	push	r7
 92a:	8f 92       	push	r8
 92c:	9f 92       	push	r9
 92e:	af 92       	push	r10
 930:	bf 92       	push	r11
 932:	cf 92       	push	r12
 934:	df 92       	push	r13
 936:	ef 92       	push	r14
 938:	ff 92       	push	r15
 93a:	0f 93       	push	r16
 93c:	1f 93       	push	r17
 93e:	cf 93       	push	r28
 940:	df 93       	push	r29
 942:	cd b7       	in	r28, 0x3d	; 61
 944:	de b7       	in	r29, 0x3e	; 62
 946:	ca 1b       	sub	r28, r26
 948:	db 0b       	sbc	r29, r27
 94a:	0f b6       	in	r0, 0x3f	; 63
 94c:	f8 94       	cli
 94e:	de bf       	out	0x3e, r29	; 62
 950:	0f be       	out	0x3f, r0	; 63
 952:	cd bf       	out	0x3d, r28	; 61
 954:	09 94       	ijmp

00000956 <__epilogue_restores__>:
 956:	2a 88       	ldd	r2, Y+18	; 0x12
 958:	39 88       	ldd	r3, Y+17	; 0x11
 95a:	48 88       	ldd	r4, Y+16	; 0x10
 95c:	5f 84       	ldd	r5, Y+15	; 0x0f
 95e:	6e 84       	ldd	r6, Y+14	; 0x0e
 960:	7d 84       	ldd	r7, Y+13	; 0x0d
 962:	8c 84       	ldd	r8, Y+12	; 0x0c
 964:	9b 84       	ldd	r9, Y+11	; 0x0b
 966:	aa 84       	ldd	r10, Y+10	; 0x0a
 968:	b9 84       	ldd	r11, Y+9	; 0x09
 96a:	c8 84       	ldd	r12, Y+8	; 0x08
 96c:	df 80       	ldd	r13, Y+7	; 0x07
 96e:	ee 80       	ldd	r14, Y+6	; 0x06
 970:	fd 80       	ldd	r15, Y+5	; 0x05
 972:	0c 81       	ldd	r16, Y+4	; 0x04
 974:	1b 81       	ldd	r17, Y+3	; 0x03
 976:	aa 81       	ldd	r26, Y+2	; 0x02
 978:	b9 81       	ldd	r27, Y+1	; 0x01
 97a:	ce 0f       	add	r28, r30
 97c:	d1 1d       	adc	r29, r1
 97e:	0f b6       	in	r0, 0x3f	; 63
 980:	f8 94       	cli
 982:	de bf       	out	0x3e, r29	; 62
 984:	0f be       	out	0x3f, r0	; 63
 986:	cd bf       	out	0x3d, r28	; 61
 988:	ed 01       	movw	r28, r26
 98a:	08 95       	ret

0000098c <_exit>:
 98c:	f8 94       	cli

0000098e <__stop_program>:
 98e:	ff cf       	rjmp	.-2      	; 0x98e <__stop_program>
